# Input file for map maker testing.

import os

from core import dir_data


sessions = range(41, 81)
file_middles = tuple(dir_data.get_data_files(sessions, field='15hr', 
                                             project="GBT10B_036", 
											 type='ralongmap'))
# Use this line to shorten amount of data to use.
file_middles = file_middles[:10]
# file_middles = file_middles[:1]

map_centre = (217.87, 2.0)
# Large problem size, full map.
#map_shape = (90, 48)
#map_spacing = .0627
# Standard problem size.
#map_shape = (72, 38)
#map_spacing = .0627
# Small problem size.
#map_shape = (44, 24)
#map_spacing = .0627
# Tiny problem size.
map_shape = (24, 14)
map_spacing = .0627

# Data paths
raid_pro = os.getenv("RAID_PRO")
input_data_dir = raid_pro + "kiyo/gbt_out_new/"
base_dir = os.getenv("GBT_OUT")
map_dir = base_dir + 'maps/first_lockandwrite_test/'
map_root = map_dir + "tmp_test_parallel_freqcorr_"
#map_root = map_dir + "tmp_test_parallel_"

# Map maker parameters.
dm_input_root = input_data_dir + 'reflagged_sec/'
dm_file_middles = file_middles
dm_input_end = '.fits'
dm_output_root = map_root
dm_scans = ()
dm_IFs = (0,)
dm_polarizations = ('I',)
dm_field_centre = map_centre
dm_pixel_spacing = map_spacing
dm_map_shape = map_shape
dm_time_block = 'scan'
dm_n_files_group = 280  # tpb nodes.
dm_frequency_correlations = 'measured'
#dm_frequency_correlations = 'None'
dm_number_frequency_modes = 3
dm_number_frequency_modes_discard = 1
dm_noise_parameter_file = (input_data_dir + 'noise_measurments_sec/'
                           'noise_parameters.shelve')
dm_deweight_time_mean = True
dm_deweight_time_slope = True
dm_interpolation = 'cubic'
dm_ts_foreground_mode_file = ''
dm_n_ts_foreground_modes = 0

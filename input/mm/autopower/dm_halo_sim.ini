pipe_modules = []
pipe_processes = 1

from quadratic_products import pwrspec_combinations

# main parameters that define the run
do_crosspower = False
do_gal_autopower = False
do_21_autopower = True

# input path
simdir_1 = "/mnt/raid-project/gmrt/mufma/JD_algebra_deltas_512/Delta_Galaxies*red.npy"
simdir_2 = "/mnt/raid-project/gmrt/mufma/JD_algebra_deltas_512/Delta_T_b21*red.npy"

# output path
pwrout_root = "/mnt/raid-project/gmrt/mufma/JD_DM_Sim/gal_21_pwrspec_512"
physpwrdir = pwrout_root

# power spectrum settings
pwr_unitless = True
pwr_return_3d = False
pwr_truncate = False
pwr_window = "blackman"
pwr_bins = [0.00314, 0.1, 70]

if do_crosspower:
    pipe_modules.append((pwrspec_combinations.JDcrossMultiDarkMSim,('sps1_','sps_')))
sps1_sim_file_left = simdir_1
sps1_sim_file_right = simdir_2
sps1_unitless = pwr_unitless
sps1_return_3d = pwr_return_3d
sps1_truncate = pwr_truncate
sps1_window = pwr_window
sps1_bins = pwr_bins
sps1_ncpu = 1
sps1_outfile = "%s/" %physpwrdir

if do_gal_autopower:
    pipe_modules.append((pwrspec_combinations.JDgalautoMultiDarkMSim,('sps2_','sps_')))
sps2_sim_file_left = simdir_1
sps2_sim_file_right = simdir_2
sps2_unitless = pwr_unitless
sps2_return_3d = pwr_return_3d
sps2_truncate = pwr_truncate
sps2_window = pwr_window
sps2_bins = pwr_bins
sps2_ncpu = 1
sps2_outfile = "%s/" %physpwrdir



if do_21_autopower:
    pipe_modules.append((pwrspec_combinations.JD21autoMultiDarkMSim,('sps3_','sps_')))
sps3_sim_file_left = simdir_2
sps3_sim_file_right = simdir_1
sps3_unitless = pwr_unitless
sps3_return_3d = pwr_return_3d
sps3_truncate = pwr_truncate
sps3_window = pwr_window
sps3_bins = pwr_bins
sps3_ncpu = 1
sps3_outfile = "%s/" %physpwrdir



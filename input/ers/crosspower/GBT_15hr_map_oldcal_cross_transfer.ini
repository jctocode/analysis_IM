pipe_modules = []
pipe_processes = 1

from quadratic_products import aggregate_bulksim
basemap = "GBT_15hr_map_oldcal"
baseoptmap = "WiggleZ_15hr"
basecross = basemap + "_x_" + baseoptmap
output_tag = basecross + "_" + "blackman_order1"
pwrout_root = '/mnt/raid-project/gmrt/eswitzer/GBT/bulksim/'
pwrout_base = pwrout_root + output_tag

outplotdir = "/cita/h/home-2/eswitzer/code/analysis_IM/pwrspec_plots/"

do_compile = False
do_statistics = False
do_transfer = True
do_check = False

# the rest is fairly automated and should not need to change
#----------------------------------------------------------------------------
# first compile all the simulation runs into a single file
#----------------------------------------------------------------------------
if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as1_', 'as_')))
as1_apply_2d_transfer = None
as1_directory = "%s_obsbeammeansub/" % pwrout_base
as1_basefile = "%s_sim_" % output_tag
as1_outfile = "%s/%s_sim_beam_meansub.shelve" % (pwrout_root, output_tag)

if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as2_', 'as_')))
as2_apply_2d_transfer = None
as2_directory = "%s_obs/" % pwrout_base
as2_basefile = "%s_sim_" % output_tag
as2_outfile = "%s/%s_sim_nobeam.shelve" % (pwrout_root, output_tag)

if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as3_', 'as_')))
as3_apply_2d_transfer = None
as3_directory = "%s_modeclean_plussim/" % pwrout_base
as3_basefile = "%s_sim_" % output_tag
as3_outfile = "%s/%s_sim_modeclean_plussim.shelve" % (pwrout_root, output_tag)

if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as4_', 'as_')))
as4_apply_2d_transfer = None
as4_directory = "%s_modeclean_plussim_minusmap/" % pwrout_base
as4_basefile = "%s_sim_" % output_tag
as4_outfile = "%s/%s_sim_modeclean_plussim_minusmap.shelve" % (pwrout_root, output_tag)

if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as5_', 'as_')))
as5_apply_2d_transfer = None
as5_directory = "%s_modeclean_plussim_minussim/" % pwrout_base
as5_basefile = "%s_sim_" % output_tag
as5_outfile = "%s/%s_sim_modeclean_plussim_minussim.shelve" % (pwrout_root, output_tag)

#----------------------------------------------------------------------------
# then find some statistics on the above sets
#----------------------------------------------------------------------------
if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast1_', 'ast_')))
ast1_shelvefile = as1_outfile
ast1_outputdir = "%s/%s_sim_beam_meansub/" % (outplotdir, output_tag)

if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast2_', 'ast_')))
ast2_shelvefile = as2_outfile
ast2_outputdir = "%s/%s_sim_nobeam/" % (outplotdir, output_tag)

if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast3_', 'ast_')))
ast3_shelvefile = as3_outfile
ast3_outputdir = "%s/%s_sim_modeclean_plussim/" % (outplotdir, output_tag)

if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast4_', 'ast_')))
ast4_shelvefile = as4_outfile
ast4_outputdir = "%s/%s_sim_modeclean_plussim_minusmap/" % (outplotdir, output_tag)

if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast5_', 'ast_')))
ast5_shelvefile = as5_outfile
ast5_outputdir = "%s/%s_sim_modeclean_plussim_minussim/" % (outplotdir, output_tag)

#----------------------------------------------------------------------------
# now find the various transfer functions
#----------------------------------------------------------------------------
if do_transfer:
    pipe_modules.append((aggregate_bulksim.CalculateTransfer, ('atr1_', 'atr_')))
atr1_shelvefile_in = as2_outfile
atr1_shelvefile_out = as1_outfile
atr1_outputdir = "%s/%s_transfer/" % (outplotdir, output_tag)
atr1_transferfile = "%s/%s_transfer.shelve" % (pwrout_root, output_tag)

if do_transfer:
    pipe_modules.append((aggregate_bulksim.CalculateTransfer, ('atr2_', 'atr_')))
atr2_shelvefile_in = as1_outfile
atr2_shelvefile_out = as3_outfile
atr2_outputdir = "%s/%s_transfer/" % (outplotdir, output_tag)
atr2_transferfile = "%s/%s_transfer.shelve" % (pwrout_root, output_tag)

#----------------------------------------------------------------------------
# Now apply the transfer function to simulations and see that it makes sense
#----------------------------------------------------------------------------
if do_check:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as6_', 'as_')))
as6_apply_2d_transfer = atr1_transferfile
as6_directory = "%s_obsbeammeansub/" % pwrout_base
as6_basefile = "%s_sim_" % output_tag
as6_outfile = "%s/%s_beam_meansub_beam_corrected.shelve" % (pwrout_root, output_tag)

if do_check:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast3_', 'ast_')))
ast6_shelvefile = as6_outfile
ast6_outputdir = "%s/%s_sim_beam_meansub_beam_corrected/" % (outplotdir, output_tag)


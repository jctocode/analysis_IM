pipe_modules = []
pipe_processes = 1

from quadratic_products import aggregate_bulksim
import os

basemap = "GBT_15hr_map_oldcalpol"
#basemap = "GBT_15hr_map_oldcal"
pwrout_root = '/mnt/raid-project/gmrt/eswitzer/GBT/pwrspec/'
output_tag = basemap + "_" + "weightedphyssim"

sigpwr_base = pwrout_root + basemap + "_" + "order1" + "/"

outplotdir = "/cita/h/home-2/eswitzer/code/analysis_IM/pwrspec_plots/"
#outplotdir = "/home/r/rbond/eswitzer/code/analysis_IM/pwrspec_plots/"

do_compile_phys = True
do_statistics = True

if do_compile_phys:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as1_', 'as_')))
as1_apply_2d_beamtransfer = None
as1_apply_2d_modetransfer = None
as1_noiseweights_2dto1d = pwrout_root + basemap + "_order1/" + basemap + "_noiseweight.hd5"
as1_fix_weight_treatment = "50modes"
as1_directory = pwrout_root + basemap + "_x_" + basemap + "_" + "order1_phys"
as1_basefile = "%s_x_%s_order1_physsim" % (basemap, basemap)
as1_outfile = "%s/%s_weightedphys.hd5" % (pwrout_root, output_tag)

if not os.path.isdir(outplotdir + output_tag):
    os.mkdir(outplotdir + output_tag)

if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast1_', 'ast_')))
ast1_aggfile_in = as1_outfile
ast1_statfile_out = "%s/%s_stat_weightedphys.hd5" % (pwrout_root, output_tag)
ast1_outplotdir = "%s/%s/" % (outplotdir, output_tag)

# Input file for freq_slices.FreqSlices.py
# 6 cores; add flag for speedup

import os
import scipy as sp

base_dir = os.getenv('GBT10B_KM')
out_dir = os.getenv('GBT10B_OUT')
liviu_base_dir = '/mnt/raid-project/gmrt/calinliv/wiggleZ/'
eswitzer_base_dir = '/mnt/raid-project/gmrt/eswitzer/'
kiyo_base_dir = '/mnt/raid-project/gmrt/kiyo/wiggleZ/'
tcv_base_dir = '/mnt/raid-project/gmrt/tcv/'

fs_save_maps = True
fs_save_noises = True
fs_save_modes = True
fs_pickle_slices = True

fs_input_root = tcv_base_dir + '/maps/'
fs_file_middles = ("sec_A_15hr_41-90", "sec_B_15hr_41-90", "sec_C_15hr_41-90", "sec_D_15hr_41-90")
#fs_file_middles = ("sec_15hr_41-49", "sec_15hr_49-56")
#fs_file_middles = ("sec_15hr_41-49",)
fs_input_end_map = '_clean_map_I.npy'
fs_input_end_noise = '_noise_inv_I.npy'
fs_modes = 15

pkl_output_root = eswitzer_base_dir + 'GBT/cleaned_maps/freq_slices_refactor_tests/'
output_root = eswitzer_base_dir + 'GBT/cleaned_maps/freq_slices_refactor_tests_15modes/'
#output_root = eswitzer_base_dir + 'modetest/73_ABCD_all_%d_modes_realmap/' % (fs_modes)
fs_output_root = output_root

fs_skip_fore_corr = True
fs_save_svd_info = True
# Must be a cPickle file to load from.
fs_svd_file = pkl_output_root + 'svd_info.pkl'

fs_convolve = True
# Frequency indices to use
fs_freq_list = range(50,60)
if True :
  fs_freq_list = range(256)
  fs_freq_list.remove(6)
  fs_freq_list.remove(7)
  fs_freq_list.remove(8)
  fs_freq_list.remove(15)
  fs_freq_list.remove(16)
  fs_freq_list.remove(18)
  fs_freq_list.remove(19)
  fs_freq_list.remove(20)
  fs_freq_list.remove(21)
  fs_freq_list.remove(22)
  fs_freq_list.remove(37)
  fs_freq_list.remove(103)
  fs_freq_list.remove(104)
  fs_freq_list.remove(105)
  fs_freq_list.remove(106)
  fs_freq_list.remove(107)
  fs_freq_list.remove(108)
  fs_freq_list.remove(130)
  fs_freq_list.remove(131)
  fs_freq_list.remove(132)
  fs_freq_list.remove(133)
  fs_freq_list.remove(134)
  fs_freq_list.remove(237)
  fs_freq_list.remove(244)
  fs_freq_list.remove(254)
  fs_freq_list.remove(255)
fs_freq_list = tuple(fs_freq_list)
# Angular lags
fs_lags = tuple(sp.arange(0.002, 2.0, 0.12))
fs_sub_weighted_mean = True
fs_make_plots = True
fs_first_pass_only = False
fs_factorizable_noise = True


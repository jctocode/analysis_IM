# phys -- P(k) of simulations from original physical coordinates
pipe_modules = []
pipe_processes = 1

from quadratic_products import aggregate_bulksim

#-----------------------------------------------------------------------------
# main parameters that define the run
#-----------------------------------------------------------------------------
do_compile_phys = True
do_statistics = True

redshift = 0.086
pwrout_root = '/mnt/raid-project/gmrt/mufma/DM_Sim/'
physpwrdir = pwrout_root + 'pwrspec_40'
signal_output_name = 'dm%.3fred_aver'%redshift
outplotdir = '/cita/d/www/home/mufma'

#----------------------------------------------------------------------------
# first compile all the simulation runs into a single file
#----------------------------------------------------------------------------
if do_compile_phys:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as_physpwr_', 'as_')))
as_physpwr_apply_2d_beamtransfer = None
as_physpwr_apply_2d_modetransfer = None
as_physpwr_noiseweights_2dto1d = None
as_physpwr_fix_weight_treatment = None
as_physpwr_directory = physpwrdir
as_physpwr_basefile = "*sim%.3fred"%redshift
as_physpwr_outfile = "%s/%s.hd5" % (pwrout_root, signal_output_name)

#----------------------------------------------------------------------------
# then find some statistics on the above sets
#----------------------------------------------------------------------------
if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast_physpwr_', 'ast_')))
ast_physpwr_aggfile_in = as_physpwr_outfile
ast_physpwr_statfile_out = "%s/%s_stat_phys.hd5" % (pwrout_root, signal_output_name)
ast_physpwr_outplotdir = "%s/%s/sim_phys" % (outplotdir, signal_output_name)



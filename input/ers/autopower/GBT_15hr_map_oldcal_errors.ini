pipe_modules = []
pipe_processes = 1

from quadratic_products import aggregate_bulksim
basemap = "GBT_15hr_map_oldcal"
pwrout_root = '/mnt/raid-project/gmrt/eswitzer/GBT/pwrspec/'
output_tag = basemap + "_" + "noise_simulations"
pwrout_base = pwrout_root + output_tag

trans_root = "/mnt/raid-project/gmrt/eswitzer/GBT/bulksim/"
#trans_beam = trans_root + "GBT_15hr_map_oldcal_blackman_order1_one-sided_beamtransfer.hd5"
trans_beam = None
trans_mode = None

#noise_weight_file = "/mnt/raid-project/gmrt/eswitzer/GBT/pwrspec/GBT_15hr_map_oldcal_order1/GBT_15hr_map_oldcal_noiseweight.hd5"
#fix_weight_treatment = "60modes"
noise_weight_file = None
fix_weight_treatment = None

outplotdir = "/cita/h/home-2/eswitzer/code/analysis_IM/pwrspec_plots/"
#outplotdir = "/home/r/rbond/eswitzer/code/analysis_IM/pwrspec_plots/"

do_compile = False
do_statistics = True

# the rest is fairly automated and should not need to change
#----------------------------------------------------------------------------
# first compile all the simulation runs into a single file
#----------------------------------------------------------------------------
if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as1_', 'as_')))
as1_apply_2d_beamtransfer = trans_beam
as1_apply_2d_modetransfer = trans_mode
as1_noiseweights_2dto1d = noise_weight_file
as1_fix_weight_treatment = fix_weight_treatment
as1_directory = "%s_xspec/" % pwrout_base
as1_basefile = "%s_sim_" % output_tag
as1_outfile = "%s/%s_xspec.hd5" % (pwrout_root, output_tag)

if do_compile:
    pipe_modules.append((aggregate_bulksim.AggregateSummary, ('as2_', 'as_')))
as2_apply_2d_beamtransfer = trans_beam
as2_apply_2d_modetransfer = trans_mode
as2_noiseweights_2dto1d = noise_weight_file
as2_fix_weight_treatment = fix_weight_treatment
as2_directory = "%s_auto/" % pwrout_base
as2_basefile = "%s_sim_" % output_tag
as2_outfile = "%s/%s_auto.hd5" % (pwrout_root, output_tag)

#----------------------------------------------------------------------------
# then find some statistics on the above sets
#----------------------------------------------------------------------------
if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast1_', 'ast_')))
ast1_aggfile_in = as1_outfile
ast1_statfile_out = "%s/%s_stat_xspec.hd5" % (pwrout_root, output_tag)
ast1_outputdir = "%s/%s_xspec/" % (outplotdir, output_tag)

if do_statistics:
    pipe_modules.append((aggregate_bulksim.AggregateStatistics, ('ast2_', 'ast_')))
ast2_aggfile_in = as2_outfile
ast2_statfile_out = "%s/%s_stat_auto.hd5" % (pwrout_root, output_tag)
ast2_outputdir = "%s/%s_auto/" % (outplotdir, output_tag)

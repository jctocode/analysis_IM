pipe_modules = []
pipe_processes = 1

from quadratic_products import pwrspec_combinations
from map import simulate_gbt

# control of the workflow
do_physpower = True
do_simulation = True

# settings
pwrout_root = "/mnt/raid-project/gmrt/mufma/GBT_Sim/pwrspec/"
simdir = pwrout_root
simrun_outfile_physical = "sim_phys_1.npy"
basemap = "GBT_15hr_map_oldcalpolstack"
sim_scenario = "str"
sim_refinement = 2.
physpwrdir = pwrout_root

pwr_unitless = True
pwr_truncate = False
pwr_window = "blackman"
pwr_bins = [0.003, 2.5, 45]
pwr_return_3d = False

if do_simulation:
    pipe_modules.append((simulate_gbt.SimulateGbt,('simrun_','sg_')))
simrun_output_root = simdir
simrun_template_file = "db:" + basemap + ":A;noise_weight"
simrun_scenario = sim_scenario
simrun_refinement = sim_refinement
simrun_weightfile = "db:" + basemap + ":A;noise_weight"
simrun_outfile_meansub = "sim_beammeansub_1.npy"
simrun_outfile_raw = "sim_raw_1.npy"
simrun_outfile_delta = "sim_delta_1.npy"
simrun_outfile_physical = "sim_phys_1.npy"


if do_physpower:
    pipe_modules.append((pwrspec_combinations.SinglePhysicalSim,('sps1_','sps_')))
sps1_sim_file_left = simdir + simrun_outfile_physical
sps1_sim_file_right = simdir + simrun_outfile_physical
sps1_unitless = pwr_unitless
sps1_return_3d = pwr_return_3d
sps1_truncate = pwr_truncate
sps1_window = pwr_window
sps1_bins = pwr_bins
sps1_ncpu = 1
sps1_outfile = "%s/1.shelve" %physpwrdir

pipe_modules = []
pipe_processes = 1

from map import simulate_gbt
from quadratic_products import pwrspec_combinations
import os
import struct

do_cleanup = False

instance_seed = struct.unpack("I", os.urandom(4))[0]
print "generating simulation with seed: %d" % instance_seed

pipe_modules.append(simulate_gbt.SimulateGbt)
sgbt_template_key = 'GBT_15hr_map_oldcal'
sgbt_output_key = 'GBT_15hr_map_oldcal'
sgbt_total_integration = 100.
sgbt_refinement = 2.
sgbt_scenario = 'str'
sgbt_multiplier = 1.
sgbt_seed = instance_seed

if do_cleanup:
    pipe_modules.append((pwrspec_combinations.CleanupCleanedMaps, ('clean1_', 'clean_')))
clean1_path_key = 'GBT_maps_Eric_15hroldcal'
clean1_tack_on = "%d_simulation" % instance_seed


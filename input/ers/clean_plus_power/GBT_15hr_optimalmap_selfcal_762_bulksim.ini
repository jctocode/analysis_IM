pipe_modules = []
pipe_processes = 1

from map import simulate_gbt
import struct

randsource = open("/dev/random", "rb")
sg_seed = struct.unpack("I", randsource.read(4))[0]
print "generating simulation with seed: %d" % sg_seed

sg_output_root = "/mnt/raid-project/gmrt/eswitzer/GBT/simulations/bulk/"
basename = "GBT_15hr_optimalmap_selfcal_762"
sg_template_file = "/mnt/raid-project/gmrt/eswitzer/GBT/maps/optimal_15hr_selfcal/secA_15hr_41-90_clean_map_I_762.npy"
sg_outfile_physical = "%s%s_sim_phys_%d.npy" % (sg_output_root, basename, sg_seed)
sg_outfile_raw = "%s%s_sim_raw_%d.npy" % (sg_output_root, basename, sg_seed)
sg_outfile_beam = "%s%s_sim_beam_%d.npy" % (sg_output_root, basename, sg_seed)
sg_outfile_beam_plus_data = "%s%s_sim_beamplusdata_%d.npy" % (sg_output_root, basename, sg_seed)

pipe_modules.append(simulate_gbt.SimulateGbt)

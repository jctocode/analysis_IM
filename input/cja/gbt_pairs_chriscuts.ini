from itertools import combinations
import os
import numpy as np
#from mpi4py import MPI

#comm = MPI.COMM_WORLD

#map_ra = os.getenv('MAP_RA')
basemap = '/scratch2/p/pen/andersoc/GBT_maps/1hr/'
basenoise = basemap
output_root = '/scratch2/p/pen/andersoc/GBT_cleaning_results/1hr/1hr_80-68_azrm_short_svd_flagged5/chris_cuts_131chan/'
pol = 'I'
try: 
    os.makedirs(output_root + pol + '/')
except OSError:
    if not os.path.isdir(output_root + pol + '/'):
        raise Exception("Output path doesn't exist and can't be made.")
#map_dec = os.getenv('MAP_DEC')
#map_size = os.getenv('MAP_SIZE')
fs_output_root = output_root + pol + '/'
freqs = np.arange(256)
freqs = np.delete(freqs, range(0,63) + [103,104,105,106,107,108,130,131,132,133,134] + range(179,218) + range(246,256))
fs_freq_list = freqs
pairlist = []
pairdict = {}
beams = {'I' :['secA','secB','secC','secD']}
codes = {'secA':'beam1','secB':'beam2','secC':'beam3','secD':'beam4'}
comb_num = [comb for comb in combinations(beams[pol],2)]
fs_clip_weight_percent = 50
fs_telescope = 'GBT'
fs_degrade_factor = 1.4
for comb in comb_num:
    current = codes[comb[0]] + '_with_' + codes[comb[1]]
    pairlist.append(current)
    pairdict[current] = {}
    pairdict[current]['map1'] = basemap + comb[0] + '_1hr_80-68_azrm_short_svd_flagged5_clean_map_' + pol + '_800.npy'
    pairdict[current]['noise_inv1'] = basenoise +  comb[0] + '_1hr_80-68_azrm_short_svd_flagged5_noise_inv_diag_' + pol + '_800.npy'
    pairdict[current]['map2'] =  basemap + comb[1] + '_1hr_80-68_azrm_short_svd_flagged5_clean_map_' + pol + '_800.npy'
    pairdict[current]['noise_inv2'] = basenoise +  comb[1] + '_1hr_80-68_azrm_short_svd_flagged5_noise_inv_diag_' + pol + '_800.npy'
    pairdict[current]['tag1'] = codes[comb[0]]
    pairdict[current]['tag2'] = codes[comb[1]]

fs_pairlist = pairlist
fs_pairdict = pairdict
fs_modes = [0,131]
